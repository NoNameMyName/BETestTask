services:
  db:
    image: postgres:16.0
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}

    volumes:
      - db-data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env

  service_a:
    image: auth_api
    build:
      context: ./Service_A
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${POSTGRES_URL}
      SPRING_DATASOURCE_USERNAME: ${USER}
      SPRING_DATASOURCE_PASSWORD: ${PASSWORD}
    env_file:
      - .env

  service-b:
    image: data_api
    build:
      context: ./Service_B
    ports:
      - 8081:8081
    environment:
      BACKEND_HOST: auth_api
      BACKEND_PORT: 8080
    env_file:
      - .env

volumes:
  db-data: